<?php
class QuoteRequestsController extends AppController {

	var $name = 'QuoteRequests';
	var $helpers = array('RecaptchaPlugin.Recaptcha');
	var $components = array('RecaptchaPlugin.Recaptcha');

	function index() {
		$this->QuoteRequest->recursive = 0;
		$this->set('quoteRequests', $this->paginate());
	}

	function view($id = null) {
		if (!$id) {
			$this->Session->setFlash(__('Invalid QuoteRequest', true));
			$this->redirect(array('action' => 'index'));
		}
		$this->set('quoteRequest', $this->QuoteRequest->read(null, $id));
		$products = $this->QuoteRequest->Product->find('list',array('conditions'=>array('available'=>'yes','is_stock_item'=>0)));
		$this->set(compact('products'));
	}

	function add($prod = '') {
		$this->set("prod", $prod);
		$this->layout = 'default_plain';
		if(empty($_REQUEST['debug'])) { Configure::write("debug", 0); }

		if (!empty($this->data)) {
			#error_log("ADDING=".print_r($this->data,true));
			
			if(!empty($this->data['QuoteRequest']['options']) && is_array($this->data['QuoteRequest']['options']))
			{
				$this->data['QuoteRequest']['options'] = join(",", $this->data['QuoteRequest']['options']);
			}
			$this->QuoteRequest->create();
			if ($this->QuoteRequest->save($this->data)) {
				$id = $this->QuoteRequest->id;

				if(!$this->malysoft)
				{
					$this->sendAdminEmail("Online Quote Request", "forms/quote_request", array('quote_request_id'=>$id));
				}

				$this->action = "add_thankyou";
				#$this->Session->setFlash(__('The QuoteRequest has been saved', true));
				#$this->redirect(array('action' => 'index'));
			} else {
				#print_r($this->QuoteRequest->validationErrors);
				$this->Session->setFlash(__('The QuoteRequest could not be saved. Please, try again.', true));
			}
		}

		$products = $this->QuoteRequest->Product->find('list',array('conditions'=>array('available'=>'yes','is_stock_item'=>0)));
		$this->set(compact('products'));
		$product = !empty($prod) ? $this->Product->find(" code = '$prod' ") : null;
		if(!empty($product)) { 
			$this->data['QuoteRequest']['product_id'] = $pid = $product['Product']['product_type_id']; 
			$ppid = $product['Product']['parent_product_type_id']; 
			$related_products = $this->Product->find('list',array('conditions'=>" (product_type_id = '$pid' OR parent_product_type_id = '$pid' OR product_type_id = '$ppid' OR parent_product_type_id = '$ppid') AND available = 'yes'"));
			$this->set("related_products", $related_products);
		
		}
		$this->set("product", $product);
	}

	function edit($id = null) {
		if (!$id && empty($this->data)) {
			$this->Session->setFlash(__('Invalid QuoteRequest', true));
			$this->redirect(array('action' => 'index'));
		}
		if (!empty($this->data)) {
			if ($this->QuoteRequest->save($this->data)) {
				$this->Session->setFlash(__('The QuoteRequest has been saved', true));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The QuoteRequest could not be saved. Please, try again.', true));
			}
		}
		if (empty($this->data)) {
			$this->data = $this->QuoteRequest->read(null, $id);
		}
	}

	function delete($id = null) {
		if (!$id) {
			$this->Session->setFlash(__('Invalid id for QuoteRequest', true));
			$this->redirect(array('action' => 'index'));
		}
		if ($this->QuoteRequest->del($id)) {
			$this->Session->setFlash(__('QuoteRequest deleted', true));
			$this->redirect(array('action' => 'index'));
		}
		$this->Session->setFlash(__('The QuoteRequest could not be deleted. Please, try again.', true));
		$this->redirect(array('action' => 'index'));
	}


	function admin_index() {
		$this->QuoteRequest->recursive = 0;
		$this->set('quoteRequests', $this->paginate());
	}

	function admin_view($id = null) {
		if (!$id) {
			$this->Session->setFlash(__('Invalid QuoteRequest', true));
			$this->redirect(array('action' => 'index'));
		}
		$this->set('quoteRequest', $this->QuoteRequest->read(null, $id));
	}

	function admin_add() {
		if (!empty($this->data)) {
			$this->QuoteRequest->create();
			if ($this->QuoteRequest->save($this->data)) {
				$this->Session->setFlash(__('The QuoteRequest has been saved', true));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The QuoteRequest could not be saved. Please, try again.', true));
			}
		}
	}

	function admin_edit($id = null) {
		if (!$id && empty($this->data)) {
			$this->Session->setFlash(__('Invalid QuoteRequest', true));
			$this->redirect(array('action' => 'index'));
		}
		if (!empty($this->data)) {
			if ($this->QuoteRequest->save($this->data)) {
				$this->Session->setFlash(__('The QuoteRequest has been saved', true));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The QuoteRequest could not be saved. Please, try again.', true));
			}
		}
		if (empty($this->data)) {
			$this->data = $this->QuoteRequest->read(null, $id);
		}
	}

	function admin_delete($id = null) {
		if (!$id) {
			$this->Session->setFlash(__('Invalid id for QuoteRequest', true));
			$this->redirect(array('action' => 'index'));
		}
		if ($this->QuoteRequest->del($id)) {
			$this->Session->setFlash(__('QuoteRequest deleted', true));
			$this->redirect(array('action' => 'index'));
		}
		$this->Session->setFlash(__('The QuoteRequest could not be deleted. Please, try again.', true));
		$this->redirect(array('action' => 'index'));
	}

}
?>
